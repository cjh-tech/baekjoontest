import java.util.*;
import java.io.*;
 
public class Main {
 	
	public static void main(String[] args) throws IOException{
		Queue<Integer> queue = new LinkedList<>();
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		int input = Integer.parseInt(br.readLine());
		StringTokenizer st ;
		for(int i = 0; i <	input; i++) {
			String str = br.readLine();
			st = new StringTokenizer(str);
			String command = st.nextToken();
			if(command.equals("push")) {
				int number = Integer.parseInt(st.nextToken());
				queue.add(number);
			}else if(command.equals("pop")) {
				if(queue.size() ==0) {
					bw.write("-1\n");
				}else if(queue.size() != 0 ) {
					bw.write(queue.poll()+"\n");
				}
			}else if(command.equals("size")) {
				bw.write(queue.size()+"\n");
			}else if(command.equals("empty")) {
				if(queue.size() == 0) {
					bw.write("1\n");
				}else if(queue.size() != 0) {
					bw.write("0\n");
				}
			}else if(command.equals("front")) {
				if(queue.size() != 0) {
					bw.write(queue.peek()+"\n");
				}else if( queue.size() == 0) {
					bw.write("-1\n");
				}
				
			}else if(command.equals("back")) {
				if(queue.size() != 0) {
					int check = queue.size();
					int back = 0;
					for(int j = 0; j< check; j++) {
						back = queue.poll();
						queue.add(back);
					}
					bw.write(back+"\n");
					
				}else if(queue.size() == 0) {
					bw.write("-1\n");
				}
				
			}
		}
		
		bw.flush();
		bw.close();
	}
}