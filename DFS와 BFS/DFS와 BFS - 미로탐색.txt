import java.util.*;
import java.io.*;
 
public class Main {
	static int[][] arr ;
	static int[][] check;
	static int row ;
	static int column;
	static int[] dx = {-1,0,1,0};
	static int[] dy = {0,1,0,-1};
	
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		String input = br.readLine();
		StringTokenizer st = new StringTokenizer(input);
		row = Integer.parseInt(st.nextToken());
		column = Integer.parseInt(st.nextToken());
		arr = new int[row][column];
		check = new int[row][column];
				
		for(int i = 0; i < row; i++) {
			String str = br.readLine();
			for(int j = 0 ; j < column; j++) {
				arr[i][j] = str.charAt(j)-'0';
			}
		}
		
		bfs(0,0);
		System.out.println(arr[row-1][column-1]);
	}
	
	public static void bfs(int x , int y) {
		Queue<Integer> q1 = new LinkedList<Integer>();
		Queue<Integer> q2 = new LinkedList<Integer>();
		q1.add(x);
		q2.add(y);
		
		while(!q1.isEmpty() && !q2.isEmpty()) {
			int ex = q1.poll();
			int ey = q2.poll();
			check[ex][ey] = 1;
			int rx ; 
			int ry ;
			
			for(int i =0; i < 4; i++) {
				rx = dx[i]+ex;
				ry = dy[i]+ey;
				
				if(rx>=0 && ry>=0 && rx <row && ry<column) {
					if(arr[rx][ry] == 1 && check[rx][ry] == 0) {
						q1.add(rx);
						q2.add(ry);
						arr[rx][ry] = arr[ex][ey] + 1;
						check[rx][ry] = 1;
					}
				}
			}
		}
		
	}
	
}